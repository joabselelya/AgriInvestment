@model AgriInvestment.Core.ViewModels.InvestmentProductManagerViewModel

<div class="k-edit-form-container">
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.InvestmentsCount)

    <div style="margin-bottom:15px; back">
        <div id="productPhoto" class='productPhotoBox' style='background-image: url(" + @Url.Content("~/Images/Products/1.jpg") + ");'></div>
        @(Html.Kendo().Upload()
            .Name("uploadProductPhoto")
            .Multiple(false)
            .ShowFileList(false)
            .Events(e => e.Success("onSuccess"))
            .Async(a => a
                .SaveField("productPhoto")
                .Save("AsyncSavePhoto", "InvestmentProduct")
                .Remove("AsyncRemovePhoto", "InvestmentProduct")
            )
            .Validation(validation => validation.AllowedExtensions(new string[] { ".jpeg" }))
        )
    </div>
    <div>
        <div class="k-edit-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="k-edit-field">
            @Html.Kendo().TextBoxFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
    </div>
    <div>
        <div class="k-edit-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="k-edit-field">
            @Html.Kendo().TextBoxFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>
    </div>
    <div>
        <div class="k-edit-label">
            @Html.LabelFor(model => model.InvestmentPeriod)
        </div>
        <div class="k-edit-field">
            @Html.Kendo().NumericTextBoxFor(model => model.InvestmentPeriod).Format("# Months")
            @Html.ValidationMessageFor(model => model.InvestmentPeriod)
        </div>
    </div>
    <div>
        <div class="k-edit-label">
            @Html.LabelFor(model => model.ProductCategoryId)
        </div>
        <div class="k-edit-field">
            @(Html.Kendo().DropDownListFor(model => model.ProductCategoryId)
                .DataValueField("Id")
                .DataTextField("Name")
                .BindTo((List<Jilipe.Core.ViewModels.InvestmentCategoryManagerViewModel>)ViewData["InvestmentCategories"])
            )
            @Html.ValidationMessageFor(model => model.ProductCategoryId)
        </div>
    </div>
</div>

<style>
    .productPhotoBox {
        display: inline-block;
        width: 100%;
        height: 200px;
    }

    .productPhotoCircle {
        display: inline-block;
        width: 150px;
        height: 150px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin: 0px 0px 15px 0px;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
            type: "POST",
            url: "/InvestmentProduct/ResetTempData"
        });
    });

</script>